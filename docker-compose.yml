version: "3.8"

services:
  backend:
    build:
      context: ./BE-SEP490-G10-SPR25
      dockerfile: Dockerfile
    ports:
      - "5220:5220"
      - "7256:7256"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=database;Database=AppointmentSchedulingDB;User Id=sa;Password=123;TrustServerCertificate=True;MultipleActiveResultSets=true;
    depends_on:
      database:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5220/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./FE-SEP490-G10-SPR25
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:5220/api
      - NODE_ENV=production
    networks:
      - app-network
    restart: unless-stopped

  database:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    restart: always
    environment:
      SA_PASSWORD: "123"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Express"
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 123 -Q \"SELECT 1\" || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 15
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535

volumes:
  sqlserver_data:
    driver: local

networks:
  app-network:
    driver: bridge